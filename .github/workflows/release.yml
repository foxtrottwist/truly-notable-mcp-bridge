# .github/workflows/release.yml
name: Build and Release MCPB

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (without v prefix)'
        required: true
        type: string

jobs:
  build-bundle:
    runs-on: macos-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Swift
      uses: swift-actions/setup-swift@v2
      with:
        swift-version: '6.0.3'
    
    - name: Extract Version
      id: version
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        elif [ "${{ github.event_name }}" == "push" ] && [[ "${{ github.ref }}" == refs/tags/* ]]; then
          VERSION="${GITHUB_REF#refs/tags/v}"
        else
          # Extract version from manifest.json
          VERSION=$(python3 -c "import json; print(json.load(open('manifest.json'))['version'])")
        fi
        echo "Extracted version: $VERSION"
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install mcpb CLI
      run: npm install -g @anthropic-ai/mcpb

    - name: Build Swift Bridge
      run: |
        # Build for release (GitHub Actions runners are arm64 for macos-latest)
        swift build -c release --product mcp-bridge

        # Show architecture info
        file .build/release/mcp-bridge
        lipo -info .build/release/mcp-bridge || true
        
    - name: Check if version changed
      id: version_check
      run: |
        VERSION="${{ steps.version.outputs.VERSION }}"

        # Get latest tag version (if any)
        LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
        if [ -n "$LATEST_TAG" ]; then
          LATEST_VERSION=${LATEST_TAG#v}
        else
          LATEST_VERSION="0.0.0"
        fi

        echo "Current manifest version: $VERSION"
        echo "Latest tag version: $LATEST_VERSION"

        if [ "$VERSION" != "$LATEST_VERSION" ]; then
          echo "VERSION_CHANGED=true" >> $GITHUB_OUTPUT
          echo "Version changed from $LATEST_VERSION to $VERSION"
        else
          echo "VERSION_CHANGED=false" >> $GITHUB_OUTPUT
          echo "Version unchanged: $VERSION"
        fi

    - name: Create tag for new version
      if: github.event_name == 'push' && github.ref == 'refs/heads/main' && steps.version_check.outputs.VERSION_CHANGED == 'true'
      run: |
        VERSION="${{ steps.version.outputs.VERSION }}"
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag "v$VERSION" -m "Release v$VERSION"
        git push origin "v$VERSION"
        echo "Created and pushed tag v$VERSION"

    - name: Skip build if version unchanged
      if: github.event_name == 'push' && github.ref == 'refs/heads/main' && steps.version_check.outputs.VERSION_CHANGED == 'false'
      run: |
        echo "Version unchanged - skipping build"
        exit 0

    - name: Continue to build after creating tag
      if: github.event_name == 'push' && github.ref == 'refs/heads/main' && steps.version_check.outputs.VERSION_CHANGED == 'true'
      run: |
        echo "Tag was created. Continuing with build in same workflow run."
        
    - name: Validate Manifest
      run: mcpb validate manifest.json

    - name: Create Bundle
      run: |
        chmod +x build-mcpb.sh
        ./build-mcpb.sh ${{ steps.version.outputs.VERSION }}

    - name: Upload Bundle Artifact
      uses: actions/upload-artifact@v4
      with:
        name: trulynotable-mcp-bridge-${{ steps.version.outputs.VERSION }}
        path: trulynotable-mcp-bridge-${{ steps.version.outputs.VERSION }}.mcpb
        
    - name: Create GitHub Release
      if: (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) || (github.event_name == 'push' && github.ref == 'refs/heads/main' && steps.version_check.outputs.VERSION_CHANGED == 'true')
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ steps.version.outputs.VERSION }}
        files: trulynotable-mcp-bridge-${{ steps.version.outputs.VERSION }}.mcpb
        generate_release_notes: true
        draft: false
        prerelease: false
        name: Release v${{ steps.version.outputs.VERSION }}
        body: |
          ## Truly Notable MCP Bridge v${{ steps.version.outputs.VERSION }}

          ### Installation

          1. Download the `.mcpb` bundle file
          2. Install using Claude Desktop or your MCP client
          3. Configure port and host if needed (defaults to 127.0.0.1:3001)

          ### Requirements

          - macOS (Intel or Apple Silicon)
          - Truly Notable app with MCP server enabled

          See the [README](https://github.com/${{ github.repository }}/blob/main/README.md) for detailed setup instructions.
